import { memo, useMemo, useState } from "react";

const ExpensiveCal = () => {
  const [count, setcount] = useState(0);

  const cal = () => {
    let sum = 0;
    for (let index = 0; index < 10000000; index++) {
      sum += index;
    }
    setcount(sum);
  };

  useMemo(() => {
    // use for optimize the function basically cache the result generated by fun if curr and previous result are same.
    cal();
  }, []);

  return (
    <>
      <h1>Total : - {count}</h1>
    </>
  );
};

export default memo(ExpensiveCal);
